//
// Copyright (c) 2007 Tridium, Inc
// All Rights Reserved.
//
// History:
//   10 Jun 16  Titus   created
//   21 Jun 16  Titus   Modified
//


//@niagaraIcon="module://icons/x16/io.png"
class MQTTPUB
  extends Component    
{
@defaultOnClone
@config @asStr property Buf(64) Host
@config property int Port = 1883
@config @asStr property Buf(64) Topic
@config @asStr property Buf(16) Clientid
@config @asStr property Buf(16) Username
@config @asStr property Buf(16) Password
@config property int Int_Msg = 0
@config property int QOS = 2
@config property bool Enable = false

define int Disconnected = 0
define int Connected = 1
define Str NetworkStatus = "Disconnected, Connected"
@range=NetworkStatus
@readonly property byte status = Disconnected

define int No_Err = 0
define int Err_InvalidHost = 1
define int Err_InvalidPort = 2
define int Err_InvalidClientId = 3
define int Err_InvalidTopic = 4
define int Err_Unknown = 5

define Str NwError = "No Err, Invalid Host, Invalid Port, Invalid ClientId, Invalid Topic, Unknown Err"
@range=NwError
@readonly property byte error = 0

@config @readonly property int Pub_ID = -1

define Log log

	virtual override void stop()
	{
	log.message("MQTT Publisher app is stopped!\n")
	}

	virtual override void start()
	{
	log.message("MQTT Publisher app is started!\n")
	// Don't touch hardware until input value is valid
	if ( !Sys.app.isSteadyState() ) 
	return

	if (name.equals("MQTTPUB"))
	inst = 0;
	if (name.equals("MQTTPU1"))
	inst = 1;
	if (name.equals("MQTTPU2"))
	inst = 2;
	if (name.equals("MQTTPU3"))
	inst = 3;
	if (name.equals("MQTTPU4"))
	inst = 4;
	if (name.equals("MQTTPU5"))
	inst = 5;
	if (name.equals("MQTTPU6"))
	inst = 6;
	if (name.equals("MQTTPU7"))
	inst = 7;
	if (name.equals("MQTTPU8"))
	inst = 8;
	if (name.equals("MQTTPU9"))
	inst = 9;
	if (name.equals("MQTTP10"))
	inst = 10;
	if (name.equals("MQTTP11"))
	inst = 11;
	if (name.equals("MQTTP12"))
	inst = 12;
	if (name.equals("MQTTP13"))
	inst = 13;
	if (name.equals("MQTTP14"))
	inst = 14;
	if (name.equals("MQTTP15"))
	inst = 15;
	}

	bool validInputs()
	{
		if ( Port == 0 )
			error := Err_InvalidPort
		else if (Host.toStr().length() == 0)
			error := Err_InvalidHost
		else if (Clientid.toStr().length() == 0)
			error := Err_InvalidClientId
		else if (Topic.toStr().length() == 0)
			error := Err_InvalidTopic
		else
			error := No_Err

		if(!this.error)
		return true;

	return false;
	}

	override void changed(Slot slot)
	{
	super.changed(slot)
	// Don't respond to prop changes while app is loading
	if (!Sys.app.isRunning()) return
	}

	virtual override void execute()
	{
		if( count == 1 )
		{
			for ( int i=0; i<15; ++i )
			{
			if( inst == i )
			Pub_ID := i
			}
		count++;
		Clientid.copyFromStr("publisher")
		changed(MQTTPUB.Clientid)
		}

		if( this.Pub_ID != -1 )
		{
		MqttDev.doMqttPublisherMsg(Pub_ID, Enable, Int_Msg,  Host.toStr(), Topic.toStr(), Port, Clientid.toStr(), 	Username.toStr(), Password.toStr(), QOS)
		}

		if( this.Pub_ID != -1 && this.Enable && validInputs() )
		{
		MqttDev.doMqttPublisherInt()
		nw_status_array = MqttDev.doMqttNetworkStatus_Pub(array_dummy)

			if( ((nw_status_array[this.Pub_ID]) == -1) )
			{
			this.status := Disconnected
			error := Err_Unknown
			log.message("MQTT $name Publisher app is disconnected due to unknown error\n")
			}
			else
			{
			this.status := Connected
			error := No_Err
			}
		}

		if( !this.Enable )
		this.status := Disconnected
	}


define int PUB_MAX = 30;
inline int[PUB_MAX] array_dummy;
int[PUB_MAX] nw_status_array;
int[PUB_MAX] nw_disable_array;
static int changed_en = 0;

//Don't declare the below two variables as static, it will not create the Pub_IDs corretly.
int count = 1;
int inst = -1;
}
