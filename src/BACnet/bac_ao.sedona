//
// Copyright (c) 2007 Tridium, Inc
// All Rights Reserved.
//
// History:
//   04 May 16  Titus   creation
//

//@niagaraIcon="module://icons/x16/io.png"
class BACnetAO
  extends Component    
{

  @defaultOnClone

  @config property int Priority = 10
//  @config property int In = 0
//  @config property int Out = 0

  @config property float In = 0.0
  @config property float Out = 0.0

  @config property int ObjectID = 0

/*
virtual void loaded()
{

}
*/
  virtual override void start()
  {
    // Don't touch hardware until input value is valid
    if ( !Sys.app.isSteadyState() ) 
      return

	Sys.out.print("Sedona app BACnetAO is Started!\n")

    return
  }

  override void changed(Slot slot)
  {
    super.changed(slot)

    // Don't respond to prop changes while app is loading
    if (!Sys.app.isRunning()) return

    // If BACnetAO.In changes, clear the override and drive what IN has.
    if ( slot == BACnetAO.In )
	{
	this.false_bkp = false;
	this.true_bkp = false;

//Allow to write by Sedona continuously if no write happens in BDT @1
	if ( this.ret2 != 0 )
	this.ov = false;

//Not allow to write by Sedona if BDT is written @1 (most higher priority)
	if ( this.ret2 == 0 )
	{
	Sys.out.print("SEDONA: Not allow to write by Sedona if BDT is written @1  PRIORITY -> $ret2 !\n")
	this.ov = true;
	}

	this.In_change = true;
	Sys.out.print("SEDONA: Override is cleared as \"BACnetAO.In\" is changed, so now, drive what \"BACnetAO.In\" has! ( please note that you can't write when BDT@1, need to write 'null' in BDT) \n")
	}

  }

 virtual override void execute()
  {

this.ret3 = BACnetDev.doBacnetInitStatus()

this.ret = BACnetDev.doBacnetAOValueStatus()

this.override_en = BACnetDev.doBacnetAOOverrideStatus()

if (this.ret3 == 0)
Sys.out.print("SEDONA: \"BACnetAO\" is enabled without enabling the \"BACnetInit\", please enable the BACnetInit and then BACnetAO\n")

//overriding part
if( this.override_en == 1 )
      {
Sys.out.print("SEDONA: BDT is trying to write the \"BACnetAO.Out\" with higher priority (called override) and value from BDT is $ret !\n")

//Sys.out.print("SEDONA: Priority from BDT is $ret2 !\n")

//Send out the data if override (priority is selected as per levels) happened

this.Out := this.ret
this.ov = true;

//clearing the override
this.override_en = 0
      }

//all condition should match, BACnetInit called, priority is not @1 in BDT, SAE is BOSS and Not override happened by BDT.
//if ( (this.ret3 == 1) && (this.pri_bkp == false) && (this.false_bkp == false) && (this.true_bkp == false) && ( this.priority_max >= this.Priority ) )
if ( (this.ret3 == 1) && (this.ov == false) && (this.true_bkp == false) && ( this.priority_max >= this.Priority ) )

{
//Sys.out.print("SEDONA: Nothing is changed, so drive to Out what In has!\n")
this.Out := this.In

//need to send the Out value to BACnet to update the "level" variable to replicate the same in BDT tool.
BACnetDev.doBacnetAOValueUpdate(this.Out, this.In_change, this.ObjectID)
this.In_change = false;
}

if (this.Priority > 16)
{
Sys.out.print("SEDONA: Priority level is excedded! and set to default @10; BACnet is support upto 16 priority levels\n")
this.Priority := 10
}

//Its for setting priority to BDT
this.ret2 = BACnetDev.doBacnetAOPriorityStatus(this.Priority, this.pri_change)

//decreasing the priority as its increased for array priority store
//this.ret2--;
//Sys.out.print("SEDONA: Returned float value is  -> $ret \n")
//Sys.out.print("SEDONA: Value from BDT -> $ret\n")
//Sys.out.print("SEDONA: Priority from BDT -> $ret2\n")

if ( this.ret2 != 1 )
{
this.pri_bkp = false;
//Sys.out.print("Priority level is cleared by writing NULL @1 in BDT\n")
}

if ( this.ret2 == 1 )
{
this.pri_bkp = true;
//Sys.out.print("Priority level is set @1 in BDT\n")
}
  }

//defining the local variables
int override_en = 0;
bool ov = false;
float ret = 0.0;
int ret2 = 255;
int ret3 = 0;
int priority_max = 16;
bool false_bkp = false;
bool true_bkp = false;
bool In_change = null;
bool pri_change = null;
bool pri_bkp = false;
}
