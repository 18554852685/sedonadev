//
// Copyright (c) 2007 Tridium, Inc
// All Rights Reserved.
//
// History:
//   16 May 16  Titus   creation
//

//@niagaraIcon="module://icons/x16/io.png"
class BACnetAV
  extends Component
{

//  @defaultOnClone

  @config property int Priority = 10
  @config property float In = 0.0
  @readonly @allowNull property float Out = 0.0

  @defaultOnClone
  @config property int ObjectID = -1

/*
virtual void loaded()
{
}
*/

  virtual override void start()
  {
    // Don't touch hardware until input value is valid
    if ( !Sys.app.isSteadyState() )
      return

//	Sys.out.print("SEDONA: $name : \"BACnetAV\" App Started!\n")
   return

  }

  override void changed(Slot slot)
  {

    super.changed(slot)

    // Don't respond to prop changes while app is loading
    if (!Sys.app.isRunning()) return

    // If BACnetAV.In changes, clear the override and drive what IN has.
    if ( slot == BACnetAV.In )
	{
	false_bkp = false;
	true_bkp = false;

//Allow to write by Sedona continuously if no write happens in BDT @1
	if ( ret2 != 0 )
	ov = false;

//Not allow to write by Sedona if BDT is written @1 (most higher priority)
	if ( ret2 == 0 )
	{
//	Sys.out.print("########### $name SEDONA ALERT!!!: Not allowed to write by Sedona if BDT is written @1  PRIORITY -> $ret2 !###########\n")
	Sys.out.print("SEDONA: $name: BACnetAV: ALERT!!!: Not allowed to write by Sedona if BDT is written @1, so pls make sure.  ###########\n")

	ov = true;
	}

	//clear the event
	ia[ObjectID] = -1;
//	Sys.out.print("$name SEDONA: $name ##################### OVERRIDE is cleared for instance $ObjectID!!! #################### \n")

	In_change = true;
	Sys.out.print("SEDONA: $name: BACnetAV: Override is cleared as \"BACnetAV.In\" is changed, so now, drive what \"BACnetAV.In\" has! ( also please note that you can't control AVs in SEDONA when BDT@1, need to write 'null' in BDT) \n")

//latest fix
	override_en = 0;

	}

  }


 virtual override void execute()
  {

//Sys.out.print("SEDONA: $name : \"BACnetAV\" App Executing...!\n") 

ret3 = BACnetDev.doBacnetInitStatus()

ret = BACnetDev.doBacnetAVValueStatus(ObjectID)

ret4 = BACnetDev.doBacnetAVOverrideInst()

ia[ret4] = 1;

override_en = BACnetDev.doBacnetAVOverrideStatus()

if (ret3 == 0)
Sys.out.print("SEDONA: $name: BACnetAV: \"BACnetAV\" is enabled without enabling the \"BACnetInit\", please enable the BACnetInit and then BACnetAV\n")

//overriding part
if( ia[ObjectID] == 1 )
      {
	Out := ret
	ov = true;
	//clearing the override
	override_en = 0
      }


//all condition should match, BACnetInit called, priority is not @1 in BDT, SAE is BOSS and Not override happened by BDT.
if ( (ret3 == 1) && (ov == false) && (true_bkp == false) && ( priority_max >= Priority ) )
{
Out := In
//need to send the Out value to BACnet to update the "level" variable to replicate the same in BDT tool.
BACnetDev.doBacnetAVValueUpdate(Out, In_change, ObjectID)
In_change = false;
}

if (Priority > 16)
{
Sys.out.print("SEDONA: $name: BACnetAV: Priority level is excedded! and set to default @10; BACnet is support upto 16 priority levels\n")
Priority := 10
}

//Its for setting priority to BDT
ret2 = BACnetDev.doBacnetAVPriorityStatus(Priority, pri_change)

if ( ret2 != 1 )
{
pri_bkp = false;
//Sys.out.print("Priority level is cleared by writing NULL @1 in BDT\n")
}

if ( ret2 == 1 )
{
pri_bkp = true;
//Sys.out.print("Priority level is set @1 in BDT\n")
}

  }

//defining the local variables
static int override_en = 0;
bool ov = false;
float ret = 0.0;
int ret2 = 255;
int ret3 = 0;
int ret4 = -1;
int priority_max = 16;
bool false_bkp = false;
bool true_bkp = false;
bool In_change = null;
bool pri_change = null;
bool pri_bkp = false;
inline static int[5] ia
}
